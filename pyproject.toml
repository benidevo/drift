[tool.poetry]
name = "drift"
version = "0.1.0"
description = "AI-powered architectural code review for GitHub and GitLab"
authors = ["Benjamin Idewor <benjaminidewor@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/benidevo/drift"
keywords = ["ci-cd", "code-review", "architecture", "github", "gitlab"]
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
litellm = "^1.74.8"
PyGithub = "^2.3.0"
python-gitlab = "^6.2.0"
jira = {version = "^3.8.0", optional = true}
pyyaml = "^6.0.2"

[tool.poetry.extras]
jira = ["jira"]

[tool.poetry.group.dev.dependencies]
ruff = "^0.12.5"
mypy = "^1.11.0"
pytest = "^8.3.1"
pytest-asyncio = "^0.23.8"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
responses = "^0.25.3"
pre-commit = "^3.8.0"
types-PyYAML = "^6.0.12.20240808"
types-requests = "^2.32.0.20240712"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
force-single-line = false
force-sort-within-sections = true
lines-after-imports = 2
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-first-party = ["drift"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
explicit_package_bases = true
mypy_path = "src"

[[tool.mypy.overrides]]
module = "github.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = "--strict-markers --cov=drift --cov-report=term-missing"

[tool.coverage.run]
source = ["drift"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.bandit]
exclude_dirs = ["tests", ".venv", "venv"]
skips = ["B101"]  # Skip assert_used test in tests

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"
version_files = [
    "pyproject.toml:^version",
    "src/drift/__init__.py:__version__"
]
